<!DOCTYPE html>
<style>
img {
   display: inline-block;
   max-width: 100%;
   height: auto;
   width: auto\9; 
}
.blink, .high_info_display, .medium_info_display, .low_info_display{
   display: inline-block;
   text-align: center;
   margin: 7%;
   margin-left: 7.5%;
   padding: 1%;
   width: 16%;
   height: 10%;
   background-color: black;
   color: whitesmoke;
   border-radius: 15px;
   vertical-align: top;
   border: 5px solid #666;
}

.high_info_display:hover, .medium_info_display:hover, .low_info_display:hover{
   cursor: pointer;
   transition: 0.3s ease;
   filter: brightness(110%);
}


body{
   background-color: #5f5f61;
}
@keyframes blinking {
   0% {
      background-color: black;
      border: 3px solid #666;
   }
   100% {
      background-color: red;
      border: 3px solid #666;
   }
}
.blink {
        animation: blinking 1s infinite;
      }

.vuln_container{
   color: white;
   margin: 5%;
   margin-top: -3%;
   margin-right: 55%;
   padding: 2%;
   padding-top: 0.2%;
   border-radius: 20px;
   background-color: royalblue;
}

p{
   margin-left: 5%;
   color: white;
   font-size: 25px;
   font-weight: bold;

}

/* The switch - the box around the slider */
.switch {
   position: relative;
   display: inline-block;
   width: 60px;
   height: 34px;
   margin-left:auto;
   margin-top: 5%;
   margin-right: 5%;
}

.switch-container{
   margin-top: 1%;
   display: flex;
}

/*Get rid of original box*/
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}


.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #12e912;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

.settings-container{
   display: inline-block;
   margin-top: 15%;
   margin-left: 63%;
   margin-right: 5%;
   padding: 2%;
   background-color: #2e3683;
   border-radius: 30px;
}

</style>
<html>
   <head>
      <meta charset="utf-8">
      <title>Scanner Dashboard</title>
   </head>

<%- include ('./partials/nav'); %>

<body>

   <div class="settings-container">
      <img id="status" src="" width="350" height="100">
      <div class="switch-container">
         <p>Debug mode:</p>
         <label class="switch">
            <input onclick='change_settings()' type="checkbox" id="debug_mode">
            <span class="slider round"></span>
         </label>
      </div>
      <div class="switch-container">
         <p>Verbose mode:</p>
         <label class="switch">
            <input onclick='change_settings()' type="checkbox" id="verbose_mode">
            <span class="slider round"></span>
         </label>
      </div>
      <div class="switch-container">
         <p>Send email:</p>
         <label class="switch">
            <input onclick='change_settings()' type="checkbox" id="send_email">
            <span class="slider round"></span>
         </label>
      </div>
   </div>

   <div>
      <div class="high_info_display" onclick="test()">
         <h1>High alert: <%= alerts.High_Alert %></h1>
      </div>
      <div class="medium_info_display">
         <h1>Medium alert: <%= alerts.Medium_Alert %></h1>
      </div>
      <div class="low_info_display">
         <h1>Low alert: <%= alerts.Low_Alert %></h1>
      </div>
   </div>
   <div class="vuln_container">
      <h2>Recent scans: </h2>
   </div>
</body>


<script>
   //Updates image every 10 seconds. Needs to be random element to stop browser reusing image in cache
   const url = "https://cronitor.io/badges/uKVpG4/production/iVvSLth_Vq5UwQMd0yDkm40Ivjg.svg"
   var image = document.getElementById("status")
   image.src = url
   

   setInterval(function(){
      var image = document.getElementById("status")
      image.src = url + "?rand=" + Math.random()
   }, 7000)

   //Alerts the user if there is a high risk. 
   if ('<%= alerts.High_Alert %>' > 0){
      //alert('ACTION NEEDED. Web server with high risk vulnerability found.')
      stylesheet = document.styleSheets[0]
      stylesheet.insertRule('.high_info_display {animation: blinking 1s infinite;}', 0)
   } else{
      element = document.getElementsByClassName('high_info_display')
      element[0].style.backgroundColor = 'darkgreen'
   }

   //Alerts the user when there is a medium risk
   if ('<%= alerts.Medium_Alert %>' > 10){
      stylesheet = document.styleSheets[0]
      stylesheet.insertRule('.medium_info_display {animation: blinking 1s infinite;}', 0)
   }else if ('<%= alerts.Medium_Alert %>' > 1){
      element = document.getElementsByClassName('medium_info_display')
      element[0].style.backgroundColor = 'orange'
   }else{
      element = document.getElementsByClassName('medium_info_display')
      element[0].style.backgroundColor = 'darkgreen'
   }

   if ('<%= alerts.Low_Alert %>' > 20){
      element = document.getElementsByClassName('low_info_display')
      element[0].style.backgroundColor = 'orange'
   } else{
      element = document.getElementsByClassName('low_info_display')
      element[0].style.backgroundColor = 'darkgreen'
   }
   function change_settings(){
      let debug = document.getElementById('debug_mode').checked
      let verbose = document.getElementById('verbose_mode').checked
      let email = document.getElementById('send_email').checked
      console.log(debug, verbose, email)

      const xhr = new XMLHttpRequest();
      const url = '/scan-settings'
      const params = '?verbose='+verbose+'&debug='+debug+'&email='+email
      xhr.open("GET", url+params, true);
         xhr.setRequestHeader("Content-Type", "application/json");
         xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
               console.log('Recieved')
            };
         }
         xhr.send()
   }
   //Add feture where you can seee different vulnribillities from json file  

   
   
</script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js" integrity="sha384-fbbOQedDUMZZ5KreZpsbe1LCZPVmfTnH7ois6mU1QK+m14rQ1l2bGBq41eYeM/fS" crossorigin="anonymous"></script>

</html>